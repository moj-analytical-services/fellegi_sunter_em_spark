{
  "definitions": {},
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://example.com/root.json",
  "type": "object",
  "title": "Sparklink settings",
  "oneOf": [{"required": ["blocking_rules", "comparison_columns", "link_type"]},
    {"required": ["cartesian_product", "comparison_columns", "link_type"]}
            ],
  "properties": {
    "link_type": {
      "$id": "#/properties/link_type",
      "type": "string",
      "title": "The type of data linking task - `dedupe_only`, `link_only` or `link_and_dedupe`.  Required.",
      "description": "- When `dedupe_only`, the user provides a single input dataframe, and `splink` tries to find duplicate entries\n- When `link_only`, the user provides two dataframes, and `splink` tries to find a link between two two.  It makes no attempt to deduplicate datasets so this is best used when input datasets contain no duplicates\n- When `link_and_dedupe`, the user provides two dataframes, and `splink` simultanouesly links and dedupes the dataframes.",
      "examples": [
        "dedupe_only",
        "link_only",
        "link_and_dedupe"
      ],
      "enum": [
        "dedupe_only",
        "link_only",
        "link_and_dedupe"
      ]
    },
    "proportion_of_matches": {
      "$id": "#/properties/proportion_of_matches",
      "type": "number",
      "title": "The proportion of comparisons thought to be matches",
      "description": "This provides the initial value (prior) that EM algorithm will start iterating from",
      "default": 0.3,
      "minimum": 0,
      "maximum": 1,
      "examples": [
        0.3,
        0.1,
        0.9
      ]
    },
    "em_convergence": {
      "$id": "#/properties/em_convergence",
      "type": "number",
      "title": "Convergence tolerance for the EM algorithm.",
      "description": " The algorithm will stop converging when the maximum of the change in model parameters between iterations is below this value.",
      "default": 0.0001,
      "examples": [
        0.0001,
        0.00001,
        1e-6
      ],
      "maximum": 0.05,
      "minimum": 1e-12
    },
    "max_iterations": {
      "$id": "#/properties/max_iterations",
      "type": "number",
      "title": "The maximum number of iterations to run even if convergence has not been reached",
      "default": 10,
      "examples": [
        20,
        150
      ],
      "maximum": 200,
      "minimum": 1
    },
    "unique_id_column_name": {
      "$id": "#/properties/unique_id_column_name",
      "type": "string",
      "title": "The name of the column in the input dataset representing a unique id. For linking tasks, ids must be unique to each dataset being linked, and do not need to be globally unique across these two datasets",
      "default": "unique_id",
      "examples": [
        "unique_id"
      ]
    },
    "retain_matching_columns": {
      "$id": "#/properties/retain_matching_columns",
      "type": "boolean",
      "title": "If set to true, each column in the `comparison_columns` array will be retained in output datasets. This is helpful so that the user can inspect matches, but once the comparison vector (gamma) columns are computed, this information is not actually needed by the algorithm.",
      "description": "The algorithm will run faster and use less resources if this is set to false.",
      "default": true,
      "examples": [
        false,
        true
      ]
    },
    "retain_intermediate_calculation_columns": {
      "$id": "#/properties/retain_intermediate_m_u_probability_columns",
      "type": "boolean",
      "title": "Retain intermediate calculation columns, such as the individual m and u probabilities associated with each column in `comparison_columns`",
      "description": "The algorithm will run faster and use less resources if this is set to false.",
      "default": true,
      "examples": [
        false,
        true
      ]
    },
    "comparison_columns": {
      "$id": "#/properties/comparison_columns",
      "type": "array",
      "title": "A list of columns to use for probabalistic matching",
      "description": "Comparisons between the values in these columns will be used to determine match scores",
      "minItems": 1,
      "items": {
        "$id": "#/properties/comparison_columns/items",
        "type": "object",
        "title": "A column that is used for probabalistic matching",
        "required": [
          "col_name"
        ],
        "additionalProperties": false,
        "properties": {
          "col_name": {
            "$id": "#/properties/comparison_columns/items/properties/col_name",
            "type": "string",
            "title": "The name of the column in the input dataset",
            "default": "",
            "examples": [
              "first_name",
              "surname"
            ]
          },
          "num_levels": {
            "$id": "#/properties/comparison_columns/items/properties/num_levels",
            "type": "integer",
            "title": "The number of different similarity categories that will be computed for this column i.e. the granularity of similarity comparison for the column",
            "description": "By default, for a string variable, two levels would implies level 0: no match, level 1: almost exact match.  Three levels imples level 0: no match, level 1: strings are similar but not exactly the same, level 2: strings are almost exactly the same.",
            "default": 2,
            "examples": [
              2,
              3,
              4
            ],
            "minimum": 2
          },
          "data_type": {
            "$id": "#/properties/comparison_columns/items/properties/data_type",
            "type": "string",
            "title": "The data type of the column.  This is used to choose how similarity is assessed this column i.e. which SQL SELECT CASE statement to use.  This is ignored if you explicitly provide a case_expression.",
            "default": "string",
            "examples": [
              "string",
              "numeric"
            ],
            "enum": [
              "string",
              "numeric"
            ]
          },
          "case_expression": {
            "$id": "#/properties/comparison_columns/items/properties/case_expression",
            "type": "string",
            "title": "A SELECT CASE expression that compares the values of the input column and returns integer values corresponding to num_levels. ",
            "description": "This is an override which allows the user to cusomise how similarity is computed for this column.  If given, this overrides the default mechanism of comparing columns and ignores data_type",
            "examples": [
              "CASE WHEN first_name_l = first_name_r THEN 1 ELSE 0 END",
              "CASE \n WHEN jaro_winkler_sim(first_name_l, first_name_r) < 0.94 THEN 2 \n WHEN jaro_winkler_sim(first_name_l, first_name_r) < 0.8 THEN 1 \n  ELSE 0 END"
            ],
            "allOf": [
              {
                "pattern": "(CASE|case)"
              },
              {
                "pattern": "(END|end)"
              }
            ]
          },
          "m_probabilities": {
            "$id": "#/properties/comparison_columns/items/properties/m_probabilities",
            "type": "array",
            "title": "A array of the m probabilities for this column i.e. the probability of observing each similarity value amonst matches. There will be num_levels values in this array.",
            "description": "The first probability given corresponds to level 0: least similar.  It refers to the probability of observing level 0 in the comparison vector amongst matches.  The second probability corresponds to level 1, up to level n, most similar.",
            "examples": [
              [
                0.05,
                0.95
              ],
              [
                0.01,
                0.1,
                0.89
              ]
            ],
            "minItems": 2
          },
          "u_probabilities": {
            "$id": "#/properties/comparison_columns/items/properties/u_probabilities",
            "type": "array",
            "title": "A array of the u probabilities for this column i.e. the probability of observing each similarity value amonst non-matches. There will be num_levels values in this array.",
            "description": "The first probability given corresponds to level 0: least similar.  It refers to the probability of observing level 0 in the comparison vector amongst matches.  The second probability corresponds to level 1, up to level n, most similar.",
            "examples": [
              [
                0.9,
                0.1
              ],
              [
                0.8,
                0.1,
                0.1
              ]
            ],
            "minItems": 2
          },
          "term_frequency_adjustments": {
            "$id": "#/properties/comparison_columns/items/properties/term_frequency_adjusments",
            "type": "boolean",
            "default": false,
            "description": "Whether ex post term frequency adjustments should be made to match scores for this column"
          },
          "gamma_index": {
            "$id": "#/properties/comparison_columns/items/properties/gamma_index",
            "type": "integer",
            "description": "Gamma values in the comparison vector will be put in columns called gamma_0, gamma_1 etc.  This is the gamma index corresponding to this column"
          },
          "col_is_in_input_df": {
            "$id": "#/properties/comparison_columns/items/properties/is_col_in_input_df",
            "type": "boolean",
            "description": "Usually, an entry in comparison columns corresponds one to one with the columns in the input dataframe.  However, if the user specifies a custom case_expression, this could refer to one or more columns in combination.  In this case, col_name will not be in the input dataframe, and is_col_in_input_df should be set to false. This will usually happen automatically",
            "default": true
          }
        }
      }
    },
    "blocking_rules": {
      "$id": "#/properties/blocking_rules",
      "type": "array",
      "title": "A list of one or more blocking rules to apply. Not needed if cartesian_product=true is set",
      "description": "Each rule is a SQL expression represeting the ON clause in a join",
      "items": {
        "$id": "#/properties/blocking_rules/items",
        "type": "string",
        "title": "Each item in the array is a SQL expression represing a left join ON condition",
        "default": [],
        "examples": [
          [
            "l.first_name = r.first_name AND l.surname = r.surname",
            "l.dob = r.dob"
          ]
        ],
        "pattern": "^(.*)$"
      }
    },
    "cartesian_product": {
      "$id": "#/properties/cartesian_product",
      "type": "boolean",
      "title": "If set to true, all comparisons between the input datasets will be generated",
      "description": "For large input datasets, the will generally be computationally intractable because it will generate numrows squared comparisons",
      "default": false,
      "examples": [
        false,
        true
      ]
    },
    "additional_columns_to_retain": {
      "$id": "#/properties/additional_columns_to_retain",
      "type": "array",
      "title": "A list of columns not being used in the probabalistic matching comparisons that you want to include in your results.",
      "default": [],
      "examples": [
        "col_1",
        "col2"
      ],
      "items": {
        "$id": "#/properties/additional_columns_to_retain/items",
        "type": "string",
        "title": "Individual strings representing other columns to retain",
        "examples": [
          "group",
          "an_other_column"
        ],
        "pattern": "^(.*)$"
      }
    }
  }
}